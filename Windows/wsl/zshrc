# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
# ZSH=/usr/share/oh-my-zsh/
ZSH=/home/sakura/.oh-my-zsh/

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="random"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git z extract web-search sudo)


# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#

# Proxy setting
function get_host_ip()
{
    # 使用 sed 命令去掉 Windows 换行符中的 \r
    local host_ip=`sed 's/\r//g' ~/Workspace/.windows_ip_info | grep '以太网.*192' | awk '{ print $NF }'`
    if [[ -z $host_ip ]]; then
        local host_ip=`sed 's/\r//g' ~/Workspace/.windows_ip_info | grep 'WLAN.*192' | awk '{ print $NF }'`
    fi
    echo $host_ip
}

function setproxy_http()
{
    host_ip=`get_host_ip`
    export https_proxy="$host_ip:$1"
    export http_proxy="$host_ip:$1"

    git config --global https.proxy https://$host_ip:$1
    git config --global http.proxy http://$host_ip:$1
}

function setproxy_socks()
{
    host_ip=`get_host_ip`
    export https_proxy=socks5://$host_ip:$1
    export http_proxy=socks5://$host_ip:$1
    
    git config --global https.proxy socks5://$host_ip:$1
    git config --global http.proxy socks5://$host_ip:$1
}

function unsetproxy()
{
    unset https_proxy
    unset http_proxy

    git config --global --unset http.proxy
    git config --global --unset https.proxy

}


# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# alias la="ls -a"
alias setproxy="setproxy_http 7890"
alias setproxy-v="setproxy_http 10809"
alias setproxy-c="setproxy_http 7890"
alias setproxy-sv="setproxy_socks 10808"
alias setproxy-sc="setproxy_socks 7890"
# alias chrome="/usr/bin/google-chrome-stable"
# alias chrome-proxy-v="/usr/bin/google-chrome-stable --proxy-server='socks5://127.0.0.1:20170'"
# alias chrome-proxy-c="/usr/bin/google-chrome-stable --proxy-server='socks5://127.0.0.1:7890'"

ZSH_CACHE_DIR=$HOME/.cache/oh-my-zsh
if [[ ! -d $ZSH_CACHE_DIR ]]; then
  mkdir $ZSH_CACHE_DIR
fi

source $ZSH/oh-my-zsh.sh
source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/yalin/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/yalin/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/yalin/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/yalin/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# 每日一言
#python ~/Autorun/hitokoto.py | lolcat
~/Autorun/hitokoto_lolcat.py

#region project initialize
source /home/sakura/.config/Code/projectTemplate/init_vscode_project.sh
#endregion
